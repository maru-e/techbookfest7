= ドメインでアクセスできるようにしよう

== ドメインってなに？

GoogleのURLを見てみましょう。

@<href>{https://www.google.com/}

google.comがドメインです。
「.」で区切られた一番右側の部分「com」をトップレベルドメインと呼びます。

トップレベルドメインは何でもよいわけではなく、次のように決まっています。

=== 分野別トップレベルドメイン（gTLD）
利用者の居住国に関係なく誰でも取得できるドメインです。
具体的には次のような種類があります。

//table[gTLDdomain][分野別トップレベルドメインの種類]{
ドメインの種類	特徴
--------------------------------------------
com	企業や商用サービスを表すドメイン
net	主にネットワークサービスの提供者を表すドメイン
org	主に非営利団体を表すドメイン
biz	主にビジネスを表すドメイン
info	主に情報の提供者を表すドメイン
//}

=== 国コードトップレベルドメイン（ccTLD）
国ごと・地域ごとに割り当てられたドメインです。日本であれば「jp」が該当します。
また、「jp」ドメインの中でも、トップレベルドメインの次の文字列（セカンドレベルドメイン）に指定の文字列が入り、その文字列ごとに取得可能な組織が限定されるドメインを属性型JPドメイン名と呼び、次のような種類に分類されます。
ネットワークサービスを示す「ne.jp」を除き１組織１つしか取得できない決まりとなっています。

//table[ccTLDdomain][属性型JPドメインの種類]{
ドメインの種類	特徴
--------------------------------------------
co.jp	日本国内で登記を行っている会社・企業が登録可能（例：株式会社・有限会社など）
or.jp	特定の法人組織が登録可能（例：財団法人、社団法人など）
ne.jp	ネットワークサービスごとに登録可能
ac.jp	学校教育法などの規定による学校が登録可能（例：学校法人など）
go.jp	日本国の政府機関、各省庁が管轄する研究所、特殊法人（特殊会社を除く）が登録可能
//}

ヤフーのURLを見てみましょう。トップレベルドメインを見れば、日本国内の企業であることが分かります。

@<href>{https://www.yahoo.co.jp/}

=== サブドメイン

もう一度yahooのURLをみてみましょう。

@<href>{https://www.yahoo.co.jp/}

ドメインの手前に「www.」とあります。これはサブドメインといい、
ドメインをさらに分割して利用できるドメインのことを指します。1つのドメインを目的別や用途別に分けて利用する際に使用されます。
yahooの例が分かりやすいかと思います。

//table[subdomain][サブドメインの例]{
サービス名	URL	ドメイン名
----------------------------------------
Yahoo! JAPAN	https://www.yahoo.co.jp/	yahoo.co.jp
Yahoo!ショッピング	https://shopping.yahoo.co.jp/	shopping.yahoo.co.jp
ヤフオク	https://auctions.yahoo.co.jp/	auctions.yahoo.co.jp
Yahoo!天気	https://weather.yahoo.co.jp/	weather.yahoo.co.jp
Yahoo!ニュース	https://news.yahoo.co.jp/	news.yahoo.co.jp
//}

=== なぜドメインにアクセスするとサーバーにアクセスできるの？

ネットワークに接続した機器同士が通信するために必要なものは何でしたか？
IPアドレスがネットワーク上の住所だと説明しましたね。

では、なぜドメインで目当てのサーバーにアクセスできるのでしょうか？

それは、このドメインはこのIPアドレス、という風にドメインとサーバーのIPアドレスが紐づけられているからです。
この紐付けをしているのが「DNSサーバー」です。

== ドメインを取得する

同じドメインをもったWebページが複数存在したらどのWebページを表示すればよいのか分からなくて困りますよね。
同じドメインは世界中で登録できないように、「レジストリ」という機関で厳密に管理されています。
レジストリと契約してドメインの販売を担当しているのが、「レジストラ」やその代理店です。

どこのレジストラから購入するか、どんなドメインを購入するかによって値段や安全性が異なります。
たとえば、「.jp」は日本でしか取得できないため信頼性が高い分、値段も高くなります。

今回は勉強のためのドメインなので、freenomというレジストラから無料のドメインを取得することにします。

次のサイトにアクセスします。

https://www.freenom.com/ja/index.html

トップページで、取得したいドメイン名を入力します。

//image[350_Freenom][取得したいドメイン名を入力][scale=0.9]{
//}

一覧の中から「.tk」@<fn>{tk_domain}を選択し、「チェックアウト」をクリックしましょう。
//footnote[tk_domain][.tkは国別コードトップレベルドメイン（ccTLD）のひとつで、オーストララシアにあるニュージーランドの領土であるトケラウに割り当てられています。登録してから1年間は無料で利用できるのですが、アクセスがなく放置されたドメインは無効化され、広告を表示することによって、利益を得ている仕組みです。90日間に25回のアクセスがないと自動的に広告に置き換わります。今回はあくまで勉強用なので、こちらのドメインを使用します。]

//image[351_Freenom][「チェックアウト」をクリック][scale=0.9]{
//}

Periodはプルダウンから無料で使用できる最長の「12 Months」を選択し、「Continue」をクリックします。


//image[352_Freenom][「Continue」をクリック][scale=0.9]{
//}

メールアドレスを入力し、「Verify My Email Address」をクリックします。

//image[353_1_Freenom][メールアドレスの確認][scale=0.9]{
//}

確認メールが送信されたため、メールを確認しましょう。

//image[353_Freenom][確認メールが送信された][scale=0.9]{
//}

freenomから送信されたメールを開き、URLをクリックします。

//image[354_Freenom_Email_Verification][メールのURLをクリック][scale=0.9]{
//}

ドメイン取得者の情報を入力する必要があります。
会社でなく個人で取得する場合、住所などは個人情報になりますので、自分で判断して入力してください。@<fn>{whois}
//footnote[whois][レジストリやレジストラがドメイン名の登録者などに関する情報を、whoisというサービスでインターネットユーザーが誰でも参照できるサービスとして提供しています。これにはドメイン名登録者の名前および住所も含まれ、ネットワークの安定的運用を実施する上で、何か問題が起きたりした時に連絡する目的で公開されます。今回freenomで入手したドメインはfreenomから無料で貸与されている扱いなので、freenomの情報（TKドメインだとTeletok社の情報）が公開されています。取得時に入力した個人情報は公開されないので安心です。]

//image[355_Freenom][ドメイン取得者の情報を入力][scale=0.9]{
//}

「I have read and agree to the Terms & Conditions」にチェックを入れたら
「Complete Order」をクリックします。

//image[356_Freenom][「Complete Order」をクリック][scale=0.9]{
//}

ドメイン取得の申し込みが完了しました。

//image[357_Freenom][ドメイン取得の申し込みが完了][scale=0.9]{
//}

== Route53にドメインを登録してロードバランサーに紐付けよう

Route53は、AWSが提供するDNSサーバーです。

AWSマネジメントコンソールで「Route53」を検索しましょう。

//image[360_Management_Console][「Route53」を検索][scale=0.9]{
//}

「DNS管理」にある「今すぐ始める」をクリックしましょう。

//image[361_Route_53_Management_Console][DNS管理を今すぐ始める][scale=0.9]{
//}

Route53のダッシュボードで「ホストゾーンの作成」をクリックします。

//image[362_Route_53_Management_Console][「ホストゾーンの作成」をクリック][scale=0.9]{
//}

右側の「ホストゾーンの作成」で、ドメイン名に取得したドメイン名を、コメントに「start-infra-on-aws」と入力しましょう。

「作成」をクリックします。

//image[363_Route_53_Management_Console][作成」をクリック][scale=0.9]{
//}

「レコードセットの作成」をクリックします。

//image[364_Route_53_Management_Console][「レコードセットの作成」をクリック][scale=0.9]{
//}

名前に「www」を入力し、エイリアスは「はい」を選択、エイリアス先に「start-infra-on-aws」という名前のロードバランサーを選択します。

AWSのアカウントIDのエイリアスを設定した時にも説明しましたが、エイリアスとは、別名のことでしたね。
つまり、「www.<取得したドメイン名>」の別名が「start-infra-on-aws」のロードバランサーになります。「www.<取得したドメイン名>」にアクセスすると、「start-infra-on-aws」のロードバランサーにアクセスします。

「作成」をクリックします。

//image[365_Route_53_Management_Console][エイリアスを作成][scale=0.9]{
//}

エイリアスが作成されました。


//image[366_Route_53_Management_Console][エイリアスが作成された][scale=0.9]{
//}


取得したドメインに置き換えて、次のURLにアクセスしてみましょう。

@<href>{http://www.<取得したドメイン>}

残念、何も表示されませんね。

== ドメインのネームサーバーを変更する

ドメイン名とIPアドレスを紐付る情報を、どのDNSサーバーに登録するかを指定するのが「ネームサーバー情報」です。
先ほどAWSのRoute53にドメインとエイリアスを登録しましたが、今のままだとネームサーバーがfreenomのネームサーバーになっており、
先ほどのドメインにアクセスするとAWSのRoute53ではなくfreenomのネームサーバーに聞きに行ってしまいます。

ネームサーバーをAWSのRoute53に変更する必要がありますね。

freenomにログインします。

@<href>{https://www.freenom.com/ja/index.html}

ログイン後、「Services」から「My Domains」を選択します。

//image[370_Freenom][「My Domains」を選択][scale=0.9]{
//}

取得したドメインが表示されたら、「Manage Domain」をクリックします。

//image[371_Freenom][「Manage Domain」をクリック][scale=0.9]{
//}

「Management Tools」 タブを表示し、「Nameservers」を選択します。

//image[373_Freenom][「Nameservers」を選択][scale=0.9]{
//}

AWSマネジメントコンソールのRoute53ダッシュボードを表示します。

タイプ「NS」と表示された列があり、4つネームサーバーが登録されています。

//image[374_Route_53_Management_Console][Route53のレコードセットを確認][scale=0.9]{
//}

freenomのネームサーバーの設定ページで「Use custom nameservers （enter below）」を選択し、
Route53に登録されている4つのネームサーバーをコピペします。

4つともすべて貼り付けたら「Change Nameservers」をクリックします。

//image[375_Freenom][ネームサーバーをRoute53に変更][scale=0.9]{
//}

今度こそ、取得したドメインでアクセスしてみましょう。

@<href>{http://www.<取得したドメイン>}

無事、HPが表示されましたね。
